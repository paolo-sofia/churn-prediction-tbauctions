<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="89f0cefb-2fb7-43d6-9f75-e7b2879a8a8a" name="Changes" comment="feat: remove main.py">
      <change afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/data/iso_countries.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/notebook/eda.ipynb" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/notebook/optimize_model.ipynb" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/notebook/training.ipynb" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/churn_prediction_tbauctions/api/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/churn_prediction_tbauctions/api/inference.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/churn_prediction_tbauctions/api/main.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/churn_prediction_tbauctions/api/requirements.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/churn_prediction_tbauctions/model_training.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/churn_prediction_tbauctions/preprocess.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../home-credit/notebooks/isolation_forest.ipynb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pyproject.toml" beforeDir="false" afterPath="$PROJECT_DIR$/pyproject.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test.ipynb" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../home-credit/columns_fill_nulls.py" beforeDir="false" afterPath="$PROJECT_DIR$/../home-credit/columns_fill_nulls.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../home-credit/notebooks/full_data_check.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/../home-credit/notebooks/full_data_check.ipynb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../home-credit/notebooks/model_full_data.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/../home-credit/notebooks/model_full_data.ipynb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../home-credit/notebooks/preprocess_all_depths.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/../home-credit/notebooks/preprocess_all_depths.ipynb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../home-credit/notebooks/preprocess_depth_0_internl_data.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/../home-credit/notebooks/preprocess_depth_0_internl_data.ipynb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../home-credit/notebooks/preprocess_depth_1_internal_data.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/../home-credit/notebooks/preprocess_depth_1_internal_data.ipynb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../home-credit/notebooks/preprocess_depth_2.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/../home-credit/notebooks/preprocess_depth_2.ipynb" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="Python Script" />
        <option value="Jupyter Notebook" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2dGuwNdfeis9wUTIoqKnFt9YVJe" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.Dockerfile.executor": "Run",
    "Docker.churn-prediction: Compose Deployment.executor": "Run",
    "Python.inference.executor": "Debug",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/home/paolo/git/fraud-detection",
    "settings.editor.selected.configurable": "com.koxudaxi.ruff.RuffConfigurable"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/notebook" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/data" />
      <recent name="$PROJECT_DIR$/src/churn_prediction_tbauctions/api" />
      <recent name="$PROJECT_DIR$/notebook" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.Dockerfile">
    <configuration name="inference" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="churn-prediction-tbauctions" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/churn_prediction_tbauctions/api" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/churn_prediction_tbauctions/api/inference.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="churn-prediction-tbauctions" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="buildOnly" value="true" />
          <option name="sourceFilePath" value="Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="churn-prediction: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="../churn-prediction/docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.Dockerfile" />
        <item itemvalue="Docker.churn-prediction: Compose Deployment" />
        <item itemvalue="Python.inference" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-5a2391486177-2887949eec09-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-233.13763.11" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: init repo" />
    <MESSAGE value="feat: remove main.py" />
    <option name="LAST_COMMIT_MESSAGE" value="feat: remove main.py" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/churn_prediction_tbauctions/api/inference.py</url>
          <line>57</line>
          <option name="timeStamp" value="30" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/src/churn_prediction_tbauctions/preprocess.py</url>
          <line>205</line>
          <option name="timeStamp" value="35" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/venv/lib/python3.11/site-packages/shap/explainers/_linear.py</url>
          <line>104</line>
          <option name="timeStamp" value="39" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/churn_prediction_tbauctions$inference.coverage" NAME="inference Coverage Results" MODIFIED="1709910014734" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src/churn_prediction_tbauctions/api" />
  </component>
</project>